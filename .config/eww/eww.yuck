; Status Bar Layout
(defwindow statusbar
	:monitor 0
	:geometry (geometry
		:x "0%"
		:y "0%"
		:width "0px"
		:height "100%"
		:anchor "left center")
	:stacking "fg"
	:exclusive true
	:hexpand false
	:vexpand false
	:namespace "statusbar"
	(statusbar))


(defwidget statusbar[]
	(box
		:class "statusbar"
		:orientation "v"
		:spacing 8
		:space-evenly false
		:vexpand false
		:hexpand false
		(statusbar-top)
		(statusbar-middle)
		(statusbar-bottom)))

; Top Section
(defwidget statusbar-top []
	(box
		:class "statusbar-top statusbar-section"
		:orientation "v"
		:valign "start"
		:halign "fill"
		:hexpand false
		:vexpand false
		(box
			:orientation "v"
			(workspaces))))

; Middle Section
(defwidget statusbar-middle []
	(box
		:class "statusbar-middle statusbar-section"
		:orientation "v"
		:valign "fill"
		:halign "fill"
		:hexpand false
		:vexpand true
		(window-title)))

; Bottom Section
(defwidget statusbar-bottom []
	(box
		:class "statusbar-bottom statusbar-section"
		:orientation "v"
		:valign "end"
		:halign "fill"
		:hexpand false
		:vexpand false
		:space-evenly false
		:spacing 2
		:orientation "v"
			(resources)
			(network)
			(sound)
			(battery)
			(system-tray)
			(datetime)))

; Workspaces Widget
(deflisten workspace-info-list :initial "[]" "/home/daudi/.cargo/bin/eww-utils eww-helpers get-workspace-info-list")
(defwidget workspaces []
	(eventbox
		:class "workspaces"
		:onscroll "/home/daudi/.cargo/bin/eww-utils eww-helpers move-workspace {}"
		(box
			:orientation "v"
			:spacing 2
			(for workspace-info in workspace-info-list
				(button
					:onclick "hyprctl dispatch workspace ${workspace-info.id}"
					:class "workspace-entry ${workspace-info.isActive ? "current" : ""} ${workspace-info.windows > 0 ? "occupied" : "empty"}"
					(label :class "icon" :justify "center" :text "${workspace-info.id}"))))))

; Window Title Widget
(deflisten window-title-info
	:initial "{'title':'...','class':'...'}"
	`/home/daudi/.cargo/bin/eww-utils eww-helpers get-active-window-info`)
(defwidget window-title []
	(label
		:class "title"
		:height "100%"
		:angle 90
		:limit-width 24
		:show-truncated true
		:justify "center"
		:text "${window-title-info.title}"))

; System-tray Widget
(defwidget system-tray []
	(box
		:halign "fill"
		:valign "center"
		:class "systray"
		(systray
			:valign "center"
			:orientation "v")))

; Hardware Widget
(defwidget resources []
	(eventbox
		(box
			:class "hardware"
			:hexpand false
			:vexpand false
			:orientation "v"
			:space-evenly false
			(box
				:hexpand false
				:vexpand false
				:orientation "v"
				:space-evenly false
				:spacing 0
				(for core in {EWW_CPU.cores}
					(progress
						:class "color${(captures(core.core, 'cpu(\d+)')[1] % 4) + 1}"
						:tooltip "${core.core}"
						:orientation "h"
						:value {core.usage}
						:flipped false))))))

; Network Widget
(deflisten network-info :initial "{'type':'disconnected'}"
	`/home/daudi/.cargo/bin/eww-utils eww-helpers get-network-info`)
(defwidget network []
	(box
		:class "network ${network-info.type}"
		:tooltip {network-info.type == "wifi" ? "${network-info.networkSsid} (${network-info.signalStrength}%)" : network-info.type == "ethernet" ? network-info.connectionName : "Disconnected!"}
		:orientation "v"
		:halign "fill"
		(label
			:justify "center"
			:class "icon"
			:text {network-info.type == "wifi" ? (network-info.signalStrength > 75 ? "󰤨" : network-info.signalStrength > 50 ? "󰤥" : network-info.signalStrength > 25 ? "󰤢" : network-info.signalStrength > 10 ? "󰤟": "󰤯") : network-info.type == "ethernet" ? "󱂇" : ""})))

; Sound Widget
(defpoll volume-info
	:interval "1s"
	`wpctl get-volume @DEFAULT_AUDIO_SINK@`)
(defpoll mic-info
	:interval "1s"
	`wpctl get-volume @DEFAULT_AUDIO_SOURCE@`)
(defvar is-volume-revealed false)
(defwidget sound []
	(box
		:class "sound"
		:orientation "v"
		(box
			:orientation "v"
			:space-evenly false
			(eventbox
				:onhover "${EWW_CMD} update is-volume-revealed=true"
				:onhoverlost "${EWW_CMD} update is-volume-revealed=false"
				:onscroll "/home/daudi/.cargo/bin/eww-utils eww-helpers set-volume @DEFAULT_AUDIO_SINK@ {} -- -1"
				(box
					:orientation "v"
					:class "volume"
					:tooltip "${round(captures(volume-info, '^Volume: (\\d+\\.\\d+)(?: \\[MUTED\\])?$')[0][1] * 100, 0)}%"
					:space-evenly false
					(revealer
						:transition "slideup"
						:reveal is-volume-revealed
						(scale
							:flipped true
							:min 0
							:max 100
							:round-digits 0
							:orientation "v"
							:onchange "/home/daudi/.cargo/bin/eww-utils eww-helpers set-volume @DEFAULT_AUDIO_SINK@ 0 {}"
							:value {captures(volume-info, "^Volume: (\\d+\\.\\d+)(?: \\[MUTED\\])?$")[0][1] * 100}))
					(button
						:onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
						(label
							:class "icon"
							:text {volume-info =~ "^Volume: \\d+\\.\\d+ \\[MUTED\\]$"
								? "󰸈"
								: captures(volume-info, "^Volume: (\\d+\\.\\d+)(?: \\[MUTED\\])?$")[0][1] > 0.5
									? "󰕾"
									: captures(volume-info, "^Volume: (\\d+\\.\\d+)( \\[MUTED\\])?$")[0][1] > 0
										? "󰖀"
										: "󰕿"
									}))))
			
			(box
				:orientation "v"
				:class "mic"
				:space-evenly false
				:tooltip {mic-info =~ "^Volume: \\d+\\.\\d+ \\[MUTED\\]$" ? "Muted" : "Active"}
				(button
					:tooltip "${round(captures(mic-info, '^Volume: ([0-9]+\\.[0-9]+)(?: \\[MUTED\\])?$')[0][1] * 100, 0)}%"
					:onclick "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"
					(label :class "icon" :text {mic-info =~ "^Volume: \\d+\\.\\d+ \\[MUTED\\]$" ? " " : ""}))))))

; Battery Widget
(defwidget battery []
	(revealer
		:transition "slideup"
		:reveal {objectlength(EWW_BATTERY) > 0}
		:tooltip "${EWW_BATTERY.BAT0.capacity}%"
		:orientation "v"
		(label
			:class "battery ${EWW_BATTERY.BAT0.status} ${EWW_BATTERY.BAT0.capacity < 10 ? 'Warn' : ''}"
			:text {
			EWW_BATTERY.BAT0.status == "Charging"
				? EWW_BATTERY.BAT0.capacity > 90
					? "󰂅"
					: EWW_BATTERY.BAT0.capacity > 80
						? "󰂋"
						: EWW_BATTERY.BAT0.capacity > 70
							? "󰂊"
							: EWW_BATTERY.BAT0.capacity > 60
								? "󰢞"
								: EWW_BATTERY.BAT0.capacity > 50
									? "󰂉"
									: EWW_BATTERY.BAT0.capacity > 40
										? "󰢝"
										: EWW_BATTERY.BAT0.capacity > 30
											? "󰂈"
											: EWW_BATTERY.BAT0.capacity > 20
												? "󰂇"
												: EWW_BATTERY.BAT0.capacity > 10
													? "󰂆"
													: "󰢜"
				: EWW_BATTERY.BAT0.capacity > 90
					? "󰁹"
					: EWW_BATTERY.BAT0.capacity > 80
						? "󰂂"
						: EWW_BATTERY.BAT0.capacity > 70
							? "󰂁"
							: EWW_BATTERY.BAT0.capacity > 60
								? "󰂀"
								: EWW_BATTERY.BAT0.capacity > 50
									? "󰁿"
									: EWW_BATTERY.BAT0.capacity > 40
										? "󰁾"
										: EWW_BATTERY.BAT0.capacity > 30
											? "󰁽"
											: EWW_BATTERY.BAT0.capacity > 20
												? "󰁼"
												: EWW_BATTERY.BAT0.capacity > 10
													? "󰁻"
													: "󰁺"})))

; Datetime Widget
(defwidget datetime[]
	(box
		:class "datetime"
		:orientation "v"
		:space-evenly false
		:spacing 2
		(clock)
		(date)))

; Clock Widget
(defwidget clock []
	(box
		:orientation "v"
		:class "clock"
		:spacing 2
		(label
			:justify "center"
			:text {formattime(EWW_TIME, "%H")})
		(label
			:justify "center"
			:text {formattime(EWW_TIME, "%M")})))

; Date Widget
(defwidget date []
	(label
		:class "date"
		:justify "center"
		:text {formattime(EWW_TIME, "%a\\n%d\\n%b")}))
